Spring Framework Project
이다영, 문태식, 김영래, 이한얼, 이상민
안녕하세요. 이다영, 문태식, 김영래, 이한얼, 이상민 조의 첫 스프링 프레임워크 프로젝트에서 발표를 맡게 된 이다영이라고 합니다. 
이제 저희 K-collections 프로젝트를 소개해드리겠습니다. 

목차
ABOUT PROJECT
개발환경
DB ERD
Page Layout
Spring Framework 패키지 구성
Security 구성도 - 가시성 / 접근성 / CSRF
CRUD & LIST
영상시연
핵심코드

ABOUT PROJECT
온라인쇼핑몰
재고의 유일성
미술품시장의 급성장
☞ 미술품 판매 웹사이트
이미지 협찬: 한국미술협회 당진지부 회원일동 
저희가 K-Collections라는 주제를 선정하게 된 과정입니다.
진부할 수도 있지만 저희는 웹개발의 정수는 역시 온라인 쇼핑몰이라고 생각하였습니다.  스프링 프레임워크의 다양한 기능들을 여러 곳에 적용해볼 수 있기 때문입니다. 따라서 첫번째로 프로젝트의 큰 틀은 쇼핑몰로 결정을 하게 되었습니다.
두번째로, 의류나 재화와 같은 전통적인 기존의 시장보다는 신성장하고 있는 사업에 주목했습니다. 최근 국내 미술시장은 1조 시대를 눈 앞에 두고 급성장하고 있습니다. 20대에서 40대의 MZ세대 미술품 수요자가 급격히 증가했기 때문입니다. 이 시장을 공략해 국내의 예술작가들이 직접 작품을 업로드 하고 소비자가 바로 구매 할 수 있는 온라인 플랫폼을 생각하게 되었습니다. 
더 나아가 세번째로, 미술품은 다른 쇼핑몰들과 다르게 모든 재고가 단 하나 뿐이라는 점도 특별하게 적용하여 그에 맞게 DB와 CRUD를 구현하였습니다. 
컬렉션이라는 말은 미술품 같은 것들을 모으는 일, 또는 그 모아진 물건의 집합을 의미하는데요,  바로 이런 온라인을 통한 미술품 구매를 통해 자신만의 컬렉션을 구성해나가는 것이죠. 이러한 의미를 담아 #K-Collections라는 이름을 짓게 되었습니다. 해시태그, 혹은 상점을 연상하는 샵 기호와 , 한국의 예술작가들의 미술품을 모아놓은 컬렉션스 라는 뜻이라고 할 수 있습니다. 
마지막으로 제가 당진미술협회라는 단체에 연줄이 있어가지고 직접 작가님들의 적극적인 협조를 얻어 직접 미술작품 사진 데이터들을 받아올 수 있어서 저희 프로젝트에 활용을 했습니다. 


운영체제 : Windows 10
IDE : Eclipse 4.25
JDK : Amazon Correto 11
웹서버 : Apache Tomcat 9.0
프론트엔드 : Bootstrap 4 , jQuery@3.6.1, CSS
Database : MySQL Workbench 8.0 
WAS application : Spring Framework 5
프로젝트 관리도구: Maven

개발환경



개발환경 - Maven <property>
- mysql.connector : MySQL 연결
- c3p0 : 커넥션 풀링 라이브러리. 어떤 jdbc 데이터베이스와도 연동, 멀티쓰레드 환경에서 유용
- 쿼리문: Hibernate 문법, 일부 Native query로 직접 sql문 작성
스프링 프레임워크와 시큐리티는 버전 5를 썼고 
여기 이 네번째에 보이는 mysql connector를 통해 MySql이라는 데이터베이스와 연결이 되도록 해주고 그 밑에 c3p0라는 라이브러리를 통해 커넥션 풀링을 하였습니다. c3p0는 어떤 jdbc 데이터베이스와도 연동이 되고 특히 멀티쓰레드 환경에서 유용하다고 할 수 있습니다. 마지막으로 쿼리문은 대부분 Hibernate 문법으로 구성하였으며, 필요한 경우 일정 부분 Native query로 직접 sql문을 작성하여 진행한 곳도 있습니다.


DB ERD
Authorities는 스프링 시큐리티에서 요구하는 부분 
그 외에는 6개의 테이블로 구성

Users 와 Artwork 테이블을 중심으로 나머지 4개의 테이블이 연관 관계를 가지도록 설계하였습니다.
Users 테이블의 username 컬럼와 password 컬럼은 security 를 적용하기 위해 해당 양식 적용

Artwork 테이블: 판매여부를 입력할 sold 값을 TINYINT로 판매완료는 1 판매중은 0 
artwork_level - 업로드 시 기본값은 none, 관리자 페이지에 permission 버튼 활성, 레벨 설정

Cart와 Wisihlist 테이블은 동일하게 유저의 정보와 아트워크 정보를 참조하도록 설계하였고

카테고리 테이블은 아트워크 분류를 위해 테이블을 생성해주어 Artwork 테이블의 category_no 컬럼에

참조해주었습니다.

마지막으로 Sales 테이블은 판매 완료 작품을 저장하기 위해 생성해주었습니다.



Page Layout
페이지 전반 디자인: Bootstrap 4
추가 CSS: 각 페이지마다 <style> 양식 적용
페이지 공통 적용: header.jsp & footer.jsp
<jsp:include page = "header.jsp"></jsp:include>
홈 메인 페이지 
찜 개수 기준 ‘Best Wish 템’ 코너
등록일 기준 ‘새로 들어온 작품’ 코너
ARTWORKS (카테고리별), ARTISTS, VIP ZONE
권한에 따른 MYPAGE, 찜 목록, 장바구니, 로그인 버튼

페이지 레이아웃

Spring Framework 구성
①
②
④
③
⑤
Config
DemoAppCofig
DemoSecurityConfig
MySpringMvcDispatcherServletInitializer
SecurityWebApplicationInitializer
컨트롤러 
DemoController
LoginController
Entity 7개
Service 
DAO 


Spring Framework Configuration
➤ 우리 프로젝트 모든 URL에 자동으로 스프링시큐리티 필터 
➤ 최초로 불러오는 설정 클래스 Initialize
➤ 서블릿 매핑은 / 붙여서

Spring Framework Configuration
➤ .properties 파일에 있는 JDBC 관련 환경변수들을 Environment 객체에 담아서 가져옴
➤ .jsp 로 끝나는 뷰단 페이지로 매핑

Security 구성
Spring Security
접근성 Access Restriction → securityConfig.java
가시성 Visibility Restriction → view 단
View단 - header.jsp
 <security:authorize access = "hasRole('000')">
접근성
스프링 시큐리티로는 크게 두가지로 제한할 수 있습니다.
첫번째로 접근성 Access Resitriction, 두번째로 가시성 Visibility Restriction을 제한 하는 것입니다.
저희는 수업에서 배운대로 configuration 패키지 내에 있는 SecurityCofig 파일에서 접근성을 설정하고, 가시성과 관련된 부분은 뷰단에서 직접 설정을 해주었습니다. 
우선 각각의 기능이 구현된 페이지 링크가 모두 모여있는 header.jsp 뷰단 페이지를 이렇게 구성하였습니다.
여기 이렇게 보이는 메뉴바를 부트스트랩에서는 navbar라고 하는데요 이 navbar에 링크가 걸려있는 부분마다 살펴보면 
왼쪽에 있는 메뉴들은 로그인 권한이 없이도 누구에게나 보여지므로 누구나 클릭을 할 수가 있습니다. 따라서 artworks랑 artist는 로그인 없이도 볼수는 있습니다. 그런데 vip페이지는 로그인이 필요해 


동영상
일반 등급일 때 vip존을 들어가서 access-denied 페이지가 뜨는 것을 보여주고, 유저가 작품을 구매해서 일반 등급에서 VIP 등급이 되는 과정도 담아주기(마이페이지에서 바뀌고 VIP ZONE에 입장 가능하게 되는 것까지), vvip 탭도 한 번 눌러주기

여기서 저걸로 권한을 줬기 때문에 비로그인 상태로 접속 시 권한을 알아볼 수 가 없으므로 (authenticated가 아닌 상태)
우선 authenticated 상태로 만들어줘서 이를 판단하게 하기 위해 로그인 창으로 스프링시큐리티가 알아서 돌려보내준다. 
그래서 거기서 로그인을 했는데 권한이 user다, 그러면 access-denied 페이지가 뜬다. 여기 동영상 보여주기.

Security 구성도 - Visibility
➤ 마이페이지: 비로그인 상태 시 로그인 창으로, 로그인되었다면 유저 마이페이지로
➤ 권한에 따라 보여지는 내용이 다르거나, 같은 링크로 보여도 권한에 따라 매핑되는 페이지가 다름

Security 구성도 - Visibility
➤ 로그인 후, 작가 권한을 가진 자에게는 작가 마이페이지 / 관리자 권한을 가진 자에게는 관리자 페이지가 보여지도록

찜
카트
Security 구성도 - Visibility
➤ 찜, 장바구니: 비로그인 상태 시 로그인 창으로, 로그인 후 해당 유저에 따라 저장된 찜목록, 장바구니 목록으로

Security 구성도 - Visibility
➤ 로그인, 로그아웃 버튼: 비로그인 상태 시 로그인창으로, 로그인 상태인 경우에는 로그아웃 버튼이 보여지도록

로그인, 일반 회원가입, 회원 탈퇴

➤ Visibility를 제한했을 경우, 허용되는 권한을 가진 자에게만 보여지므로 다른 권한을 가진 자가 접근을 할 수 없음
➤ 접근제한이 되어있는데 접근을 한다면, 403 에러 ⟶ 이러한 접근제한은 securityConfig 파일에서 설정

Security 구성도 - Access Restriction

➤ 스프링시큐리티 Configuration Class 만들기: WebSecurityConfigurerAdapter를 상속하여 클래스를 생성하고 @EnableWebSecurity 애노테이션을 추가
➤ 스프링시큐리티의 유연함: 어떤 데이터 저장소에 대해서도 사용자 인증 가능
수업시간에는 .inMemoryAuthentication 메서드, 여기서는 관계형 데이터베이스에 직접 접근
➤ 위 메소드로 JDBC 지원 사용자 저장소에서 인증,  Data source만 설정해주면  MySQL 내로 접근



➤ 스프링 시큐리티의 각종 설정: HttpSecurity로 
1) URL 마다 접근권한 설정

2) 인증 실패 시 이동페이지 연결
(권한 확인을 위해 자동으로 로그인창으로 유도)

3) 토큰을 통해 csrf로부터 보호
(default로 설정되어 있음)
Security 구성도 - Access Restriction

여기서 저걸로 권한을 줬기 때문에 비로그인 상태로 접속 시 권한을 알아볼 수 가 없으므로 (authenticated가 아닌 상태)
우선 authenticated 상태로 만들어줘서 이를 판단하게 하기 위해 로그인 창으로 스프링시큐리티가 알아서 돌려보내준다. 
그래서 거기서 로그인을 했는데 권한이 user다, 그러면 access-denied 페이지가 뜬다. 여기 동영상 보여주기.

➤ Spring security <form:form> 태그를 통해 csrf 토큰값을 넘겨줌
CSRF (사이트 간 위조 요청)

➤ 사용자가 일반유저인지, 악용된 공격인지 구분할 수 없을 때를 대비해 
csrf 토큰이 포함되어야 요청을 받아들이게 함으로써 위조요청을 방지

회원 관련 CRUD - 회원가입, 회원정보 수정(비밀번호 변경, 회원탈퇴)
작가 마이페이지 CRUD - 그림 업로드, 상세정보 수정, 작품삭제, 조건별 화면구성
관리자 페이지 CRUD - 회원, 작품, 판매내역 Table 전반을 관리하는 CRUD
찜, 장바구니 CRUD - 원하는 작품 추가 및 삭제, 구매하기로 연결


CRUD


작품 List - 카테고리별로 보여주기 (서양화, 동양화 등)
작가별 List - 새로 생성되는 작가 수 만큼의 탭 생성, 각각의 작품 보여줌
VIP List - vip/vvip 등급에만 보여지며 권한이 없는 자는 access-denied 페이지


LIST


영상시연

작가 마이페이지 

추가) 이미 판매된 작품도 보였으면



작품업로드

업로드 후 관리자 permission, 새로 들어온 작품

추가) 작가 마이페이지 vip 탭에 올라온 것도 보였으면 (영상 수정 완료)

찜, 장바구니

추가) 찜목록, 장바구니 목록 내 이미 있는 작품 좀 달라보이게


핵심코드 - 회원삭제
➤ View단 : admin-mypage.jsp
➤ DemoController

DAOImpl
회원삭제
판매 내역 테이블에서 본인 구매내역 수정
구매 내역의 기록은 제거되면 안되기 때문에 유저의 ID를 알수없음으로 수정
본인 찜목록과 장바구니에 잉여데이터가 남지 않도록 삭제
본인의 작품을 제거하기 위해 본인의 ID를 가진 아트워크의 ID를 저장하여 메서드를 통해 삭제 
권한테이블에서도 잉여데이터가 남지 않도록 본인 이름권한 삭제
마지막으로 유저 데이터를 삭제

 category, artwork, users 테이블 1번

핵심코드 - 작품구매 View단
➤ buypage.jsp
➤ cart-list.jsp
장바구니에서 구매하기 버튼 클릭 시 구매하기 창으로 이동
구매 페이지에서 주문 버튼 클릭 시 작품 구매를 진행하는 컨트롤러로 매핑

핵심코드 - 작품구매 DemoController
우선 거래내역을 기록하는데 필요한 유저의 개인정보를 불러와서 저장합니다.
이후 새로운 판매내역객체를 생성하여 jsp에서 받아온 아트워크 ID,가격,유저의 ID를 입력해준 뒤 유저 정보와 함께 판매를 진행하는 메서드로 보내줍니다.

핵심코드 - 작품구매 DAOImpl
완성된 구매 내역을 테이블에 추가
관련 상품은 존재하지 않기 때문에 찜목록과 장바구니에 아트워크 ID를 넘겨 완전히 삭제를 하고
아트워크를 판매 완료 상태로 전환 

핵심코드 - 작품구매 DAOImpl
이후 유저의 총 구매액에 아트워크 가격을 합쳐서 유저의 총 구매액을 갱신 시켜주고 해당 유저가 가진 권한정보를 가져옴
해당유저의 총 구매액이 300만원을 넘었을 때는 VIP권한을 부여,



600만원을 넘었을경우 VVIP권한을 부여,


이미 각 권한이 존재할 경우, 과정 없이 매서드를 종료

Controller 구성도
LoginController 전반적인 동작 메서드 

Controller 구성도
홈 화면 컨트롤러 및 카테고리 화면 컨트롤러                                                                                                                          작가별 페이지 및 vip 페이지

Controller 구성도
찜 목록, 장바구니 및 유저 마이페이지                                                         유저 마이페이지 주문내역 및 작가 마이페이지

Controller 구성도
작가 마이페이지 Update&Delete , 작품 업로드 기능 및 작품 정보 수정

Controller 구성도
작가 마이페이지 작품 삭제 및 관리자 페이지 전반적인 홈페이지 관리

Controller 구성도
관리자 페이지 유저 관리 작품 관리 등 전반적인 홈페이지 컨트롤

Controller 구성도
관리자 페이지 작품 판매 내역 관리 및 찜 목록 추가

Controller 구성도
찜 목록 삭제 및 장바구니 추가

Controller 구성도
장바구니 삭제, 작품 상세페이지 및 구매하기 기능

Controller 구성도
 최종 구매내역 메서드

DAO 구성도
ㄴㅇ

DAO Impl 
회원가입 되어있는 유저 권한 추출                                                                       회원가입, 탈퇴,시큐리티에서 가져온 아이디정보 추출


DAO impl
카테고리, 작가, 유저 정보 불러오기 및 유저 정보 수정                               

DAOimpl
유저정보를 전체, 각각 불러오기 및 정보 수정                                                

DAOimpl
 권한내역 보기 및 아트워트 상세정보 관리 및 유저 받아오기                          

DAOimpl
유저정보와 아트워크 정보를 통해 판매 내역 추출

DAOimpl
  장바구니 추가,리스트 출력 및 중복 방지                                   

DAOimpl

유저 기반 장바구니 삭제 및 전체 삭제

DAOimpl
작가 기준 찜 목록 등록 순위 BestWIsh 상품 불러오기

아쉬웠던점

사진 첨부 파일 업로드 기능을 구현하지 못한 점

권한 계층 Role Hierarchy 적용에 어려움을 느낀 점

지도 API를 활용한 미술관 위치가 구현이 안된 점

JS를 활용하여 다양한 팝업 및 동작이 구현되지 않은 점


더닝크루거 효과 - 능력있는 사람은 오히려 자신의 능력을 과소평가, 능력이 부족한 사람이 자신을 과대평가

감사합니다.



 
작가 작품 업로드 - 관리자가 permission 해주고 마지막에 다시 작가로 로그인해서 작가페이지에 뜨는 것까지 보여주기
유저 마이페이지 찜목록 장바구니 구매 흐름 보여줄 때 찜목록과 장바구니 담은 작품 다르게 해서 다른 화면이라는 게 확 느껴지게
회원님의 총 구매액: ${  }원 (VIP 등급: 총 구매액 300만원 이상/ VVIP 등급: 총 구매액 600만원 이상)
일반 등급일 때 vip존을 들어가서 access-denied 페이지가 뜨는 것을 보여주고, 유저가 작품을 구매해서 일반 등급에서 VIP 등급이 되는 과정도 담아주기(마이페이지에서 바뀌고 VIP ZONE에 입장 가능하게 되는 것까지), vvip 탭도 한 번 눌러주기


K-COLLECTIONS 사이트 영상 시연
영상 시연 이 순서
전반적인 artworks, artists 메뉴 부분 먼저 보여주기 (비회원상태로 보여주고 자연스럽게 로그인으로 넘어가기)
유저 및 작가 회원가입 및 로그인 (작가 로그인 및 유저 로그인)
작가 로그인 후 전반적인 로직 설명 (작가 마이페이지 구매내역 및 판매리스트 등)
작가페이지 작품업로드 작품레벨 none으로 넘어가서 관리자 페이지에 permission 뜨는 거 보여주기
유저 로그인 후 전반적인 로직 설명 (유저 마이페이지 구매내역 및 장바구니 등)
관리자 로그인 후 전반적인 로직 설명(유저 삭제,수정,아트워트 관리등)
아트워크 리스트 장바구니 추가 및 찜 목록 추가 OR 삭제 및 전체 삭제
아트워크 리스트 상세페이지 이동 시 구매하기 및 장바구니 버튼등 기능 확인
아트워크 리스트 구매하기시 구매 내역 업데이트 확인
구매된 아트워크 리스트 업데이트 확인
권한 없는 유저가 vip존 이동시 access-denied 페이지 뜨는 거 
vip가 vvip존 들어가면 뜨는거
vvip로 로그인해서 둘 다 잘 뜨는 거 보여주기
뭘 더넣지 
전반적인 artworks, artists 메뉴 부분 먼저 보여주기 
이것도 우리가 security에 권한 설정 없이 permitall 한 부분에 해당하니까 이렇게 보인다고 
